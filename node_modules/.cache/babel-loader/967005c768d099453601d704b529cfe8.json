{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Admin\\\\muss\\\\muss\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import Lood from'../Lood/Lood';import ValitudLugu from'../ValitudLugu/ValitudLugu';//import axios from 'axios';\nimport'./Menu.scss';var playlist=require('../../songPlaylist.json');var Menu=function Menu(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),activeIndex=_useState2[0],setActiveIndex=_useState2[1];// const [file, setFile] = useState<string>('');\n// const [fileName, setFileName] = useState<string>('Choose song');\n// const [uploadedFile, setUploadedFile] = useState<any>({});\nvar handleClick=function handleClick(e){var newActiveIndex=e.target.getAttribute('data-index');setActiveIndex(newActiveIndex);};var renderValitudLugu=function renderValitudLugu(){if(playlist.length){return/*#__PURE__*/React.createElement(ValitudLugu,{lugu:playlist[activeIndex]});}return null;};var renderValitudTekst=function renderValitudTekst(){if(playlist.length){return/*#__PURE__*/React.createElement(\"p\",null,\"Now playing: \".concat(playlist[activeIndex].laulja,\" - \").concat(playlist[activeIndex].looNimi));}return null;};var musicRef=useRef(null);useEffect(function(){if(musicRef.current)musicRef.current.src=playlist[activeIndex].heliFail;},[activeIndex]);//FAILI UPLOADIMINE\n{/* const chooseFile = (e:any) => {\r\n        setFile(e.target.files[0]);\r\n        setFileName(e.target.files[0].name);\r\n    };\r\n\r\n    const submitFile = async (e:any) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const res = await axios.post('localhost:5000/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            const { fileName, filePath } = res.data;\r\n\r\n            setUploadedFile({ fileName, filePath });\r\n        } catch(err) {\r\n            if(err.response.status === 500) {\r\n                console.log('Server problem');\r\n            } else {\r\n                console.log(err.response.data.msg)\r\n            }\r\n        }\r\n    }; */}return/*#__PURE__*/React.createElement(\"div\",{className:\"menu\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container1\"},renderValitudLugu(),/*#__PURE__*/React.createElement(\"p\",{style:{paddingTop:'350px'}},renderValitudTekst()),/*#__PURE__*/React.createElement(\"audio\",{ref:musicRef,autoPlay:true,controls:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"container2\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Pick a song!\"),/*#__PURE__*/React.createElement(Lood,{playlist:playlist,handleClick:handleClick})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Choose song file to upload\"),/*#__PURE__*/React.createElement(\"form\",{action:\"/upload\",method:\"post\",id:\"uploadForm\",encType:\"multipart-form-data\"},/*#__PURE__*/React.createElement(\"input\",{type:\"file\",id:\"audioFile\",name:\"mp3\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Upload\"}))));};export default Menu;","map":{"version":3,"sources":["C:/Users/Admin/muss/muss/src/components/Menu/Menu.tsx"],"names":["React","useState","useEffect","useRef","Lood","ValitudLugu","playlist","require","Menu","activeIndex","setActiveIndex","handleClick","e","newActiveIndex","target","getAttribute","renderValitudLugu","length","renderValitudTekst","laulja","looNimi","musicRef","current","src","heliFail","paddingTop"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA;AACA,MAAO,aAAP,CAEA,GAAMC,CAAAA,QAAQ,CAAGC,OAAO,CAAC,yBAAD,CAAxB,CAGA,GAAMC,CAAAA,IAAQ,CAAG,QAAXA,CAAAA,IAAW,EAAM,eAEmBP,QAAQ,CAAS,CAAT,CAF3B,wCAEZQ,WAFY,eAECC,cAFD,eAGpB;AACA;AACA;AAEC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAW,CAC3B,GAAMC,CAAAA,cAAc,CAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAvB,CACAL,cAAc,CAAEG,cAAF,CAAd,CACH,CAHD,CAKA,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5B,GAAGV,QAAQ,CAACW,MAAZ,CAAoB,CAChB,mBACI,oBAAC,WAAD,EAAa,IAAI,CAAEX,QAAQ,CAACG,WAAD,CAA3B,EADJ,CAGH,CACD,MAAO,KAAP,CACH,CAPD,CASA,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7B,GAAGZ,QAAQ,CAACW,MAAZ,CAAoB,CAChB,mBACQ,oDAAqBX,QAAQ,CAACG,WAAD,CAAR,CAAsBU,MAA3C,eAAuDb,QAAQ,CAACG,WAAD,CAAR,CAAsBW,OAA7E,EADR,CAGH,CACD,MAAO,KAAP,CACH,CAPD,CASA,GAAMC,CAAAA,QAAQ,CAAGlB,MAAM,CAAmB,IAAnB,CAAvB,CAEAD,SAAS,CAAC,UAAM,CACZ,GAAGmB,QAAQ,CAACC,OAAZ,CACID,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAuBjB,QAAQ,CAACG,WAAD,CAAR,CAAsBe,QAA7C,CACP,CAHQ,CAGN,CAACf,WAAD,CAHM,CAAT,CAKA;AAED,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;SA0BM,CAGN,mBACI,2BAAK,SAAS,CAAC,MAAf,eAEI,2BAAK,SAAS,CAAC,YAAf,EACKO,iBAAiB,EADtB,cAEI,yBAAG,KAAK,CAAE,CAACS,UAAU,CAAE,OAAb,CAAV,EAAkCP,kBAAkB,EAApD,CAFJ,cAGI,6BAAO,GAAG,CAAEG,QAAZ,CAAsB,QAAQ,KAA9B,CAA+B,QAAQ,KAAvC,EAHJ,CAFJ,cAQI,2BAAK,SAAS,CAAC,YAAf,eACI,6CADJ,cAEI,oBAAC,IAAD,EAAM,QAAQ,CAAEf,QAAhB,CAA0B,WAAW,CAAEK,WAAvC,EAFJ,CARJ,cAaI,4CACI,2DADJ,cAEI,4BAAM,MAAM,CAAC,SAAb,CAAuB,MAAM,CAAC,MAA9B,CAAqC,EAAE,CAAC,YAAxC,CAAqD,OAAO,CAAC,qBAA7D,eACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,WAAtB,CAAkC,IAAI,CAAC,KAAvC,EADJ,cAEI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,QAA3B,EAFJ,CAFJ,CAbJ,CADJ,CAuBH,CA3FD,CA6FA,cAAeH,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef, FC } from 'react';\r\nimport Lood from '../Lood/Lood';\r\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\r\n//import axios from 'axios';\r\nimport './Menu.scss';\r\n\r\nconst playlist = require('../../songPlaylist.json')\r\n\r\n\r\nconst Menu: FC = () => {\r\n    \r\n    const [activeIndex, setActiveIndex] = useState<number>(0);\r\n   // const [file, setFile] = useState<string>('');\r\n   // const [fileName, setFileName] = useState<string>('Choose song');\r\n   // const [uploadedFile, setUploadedFile] = useState<any>({});\r\n\r\n    const handleClick = (e:any) => {\r\n        const newActiveIndex = e.target.getAttribute('data-index')\r\n        setActiveIndex( newActiveIndex )\r\n    };\r\n\r\n    const renderValitudLugu = () => {\r\n        if(playlist.length) {\r\n            return (\r\n                <ValitudLugu lugu={playlist[activeIndex]}/>\r\n            )\r\n        }\r\n        return null\r\n    };\r\n\r\n    const renderValitudTekst = () => {\r\n        if(playlist.length) {\r\n            return (\r\n                    <p>{(`Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`)}</p>\r\n            )\r\n        }\r\n        return null\r\n    };\r\n    \r\n    const musicRef = useRef<HTMLAudioElement>(null);\r\n\r\n    useEffect(() => {\r\n        if(musicRef.current)\r\n            musicRef.current.src = playlist[activeIndex].heliFail\r\n    }, [activeIndex])\r\n\r\n    //FAILI UPLOADIMINE\r\n\r\n   {/* const chooseFile = (e:any) => {\r\n        setFile(e.target.files[0]);\r\n        setFileName(e.target.files[0].name);\r\n    };\r\n\r\n    const submitFile = async (e:any) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const res = await axios.post('localhost:5000/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            const { fileName, filePath } = res.data;\r\n\r\n            setUploadedFile({ fileName, filePath });\r\n        } catch(err) {\r\n            if(err.response.status === 500) {\r\n                console.log('Server problem');\r\n            } else {\r\n                console.log(err.response.data.msg)\r\n            }\r\n        }\r\n    }; */}\r\n\r\n\r\n    return(\r\n        <div className=\"menu\">\r\n            {/* valitud loo preview */}\r\n            <div className=\"container1\">\r\n                {renderValitudLugu()}\r\n                <p style={{paddingTop: '350px'}}>{renderValitudTekst()}</p>\r\n                <audio ref={musicRef} autoPlay controls />\r\n            </div>\r\n            {/* lugude list */}\r\n            <div className=\"container2\">\r\n                <h1>Pick a song!</h1>\r\n                <Lood playlist={playlist} handleClick={handleClick}/>\r\n            </div>\r\n            {/* lugude upload */}\r\n            <div>\r\n                <h1>Choose song file to upload</h1>\r\n                <form action=\"/upload\" method=\"post\" id=\"uploadForm\" encType=\"multipart-form-data\">\r\n                    <input type=\"file\" id=\"audioFile\" name=\"mp3\"/>\r\n                    <input type=\"submit\" value=\"Upload\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}