{"ast":null,"code":"import _regeneratorRuntime from\"/home/hypescript/Projects/essaTS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hypescript/Projects/essaTS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/hypescript/Projects/essaTS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{useForm}from'react-hook-form';import Lood from'../Lood/Lood';import ValitudLugu from'../ValitudLugu/ValitudLugu';import'./Menu.scss';var playlist=require('../../songPlaylist.json');var Menu=function Menu(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),activeIndex=_useState2[0],setActiveIndex=_useState2[1];var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),uploadedFile=_useState4[0],setUploadedFile=_useState4[1];var musicRef=useRef(null);useEffect(function(){if(musicRef.current)musicRef.current.src=playlist[activeIndex].heliFail;},[activeIndex]);var handleClick=function handleClick(e){var newActiveIndex=e.target.getAttribute('data-index');setActiveIndex(newActiveIndex);};var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var formData,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:formData=new FormData();formData.append('file',data.file[0]);_context.next=4;return fetch('http://localhost:5000/upload',{method:\"POST\",body:formData}).then(function(res){return res.json();});case 4:res=_context.sent;alert(JSON.stringify(res));setUploadedFile(data.file[0]);case 7:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();{/*   const splitAudio = async (filename:any) => {\n        const res = fetch('/audio/'+filename+'/split', {\n            method: \"POST\"\n        }).then(res => res.json())\n        alert(JSON.stringify(res));\n    }; */}var renderValitudLugu=function renderValitudLugu(){if(playlist.length){return/*#__PURE__*/React.createElement(ValitudLugu,{lugu:playlist[activeIndex]});}return null;};var renderValitudTekst=function renderValitudTekst(){if(playlist.length){return/*#__PURE__*/React.createElement(\"p\",null,\"Now playing: \".concat(playlist[activeIndex].laulja,\" - \").concat(playlist[activeIndex].looNimi));}return null;};return/*#__PURE__*/React.createElement(\"div\",{className:\"menu\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container1\"},renderValitudLugu(),/*#__PURE__*/React.createElement(\"p\",{style:{paddingTop:'350px'}},renderValitudTekst()),/*#__PURE__*/React.createElement(\"audio\",{ref:musicRef,autoPlay:true,controls:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"container2\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Pick a song!\"),/*#__PURE__*/React.createElement(Lood,{playlist:playlist,handleClick:handleClick})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"input\",{ref:register,type:\"file\",name:\"file\",accept:\"audio/mpeg\"}),/*#__PURE__*/React.createElement(\"button\",null,\"Submit\"))),/*#__PURE__*/React.createElement(\"div\",null,uploadedFile?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,uploadedFile.name),/*#__PURE__*/React.createElement(\"audio\",{src:'/'+uploadedFile.name,autoPlay:true,controls:true}))):null));};export default Menu;","map":{"version":3,"sources":["/home/hypescript/Projects/essaTS/src/components/Menu/Menu.tsx"],"names":["React","useState","useEffect","useRef","useForm","Lood","ValitudLugu","playlist","require","Menu","activeIndex","setActiveIndex","register","handleSubmit","uploadedFile","setUploadedFile","musicRef","current","src","heliFail","handleClick","e","newActiveIndex","target","getAttribute","onSubmit","data","formData","FormData","append","file","fetch","method","body","then","res","json","alert","JSON","stringify","renderValitudLugu","length","renderValitudTekst","laulja","looNimi","paddingTop","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Lood from '../Lood/Lood';\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\n\nimport './Menu.scss';\n\nconst playlist = require('../../songPlaylist.json');\n\n\nconst Menu: FC = () => {\n    \n    const [activeIndex, setActiveIndex] = useState<number>(0);\n    const { register, handleSubmit } = useForm<any>();\n    const [uploadedFile, setUploadedFile] = useState<any>();\n\n    const musicRef = useRef<HTMLAudioElement>(null);\n\n    useEffect(() => {\n        if(musicRef.current)\n            musicRef.current.src = playlist[activeIndex].heliFail\n    }, [activeIndex]);\n\n    const handleClick = (e:any) => {\n        const newActiveIndex = e.target.getAttribute('data-index')\n        setActiveIndex( newActiveIndex )\n    };\n\n    const onSubmit = async (data:any) => {\n        const formData = new FormData();\n        formData.append('file', data.file[0]);\n\n        const res = await fetch('http://localhost:5000/upload', {\n            method: \"POST\",\n            body: formData\n        }).then(res => res.json())\n        alert(JSON.stringify(res));\n        \n        setUploadedFile(data.file[0]);\n    };\n\n {/*   const splitAudio = async (filename:any) => {\n        const res = fetch('/audio/'+filename+'/split', {\n            method: \"POST\"\n        }).then(res => res.json())\n        alert(JSON.stringify(res));\n    }; */}\n\n    const renderValitudLugu = () => {\n        if(playlist.length) {\n            return (\n                <ValitudLugu lugu={playlist[activeIndex]}/>\n            )\n        }\n        return null\n    };\n\n    const renderValitudTekst = () => {\n        if(playlist.length) {\n            return (\n                    <p>{(`Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`)}</p>\n            )\n        }\n        return null\n    };\n\n    return(\n        <div className=\"menu\">\n            {/* valitud loo preview */}\n            <div className=\"container1\">\n                {renderValitudLugu()}\n                <p style={{paddingTop: '350px'}}>{renderValitudTekst()}</p>\n                <audio ref={musicRef} autoPlay controls />\n            </div>\n            {/* lugude list */}\n            <div className=\"container2\">\n                <h1>Pick a song!</h1>\n                <Lood playlist={playlist} handleClick={handleClick}/>\n            </div>\n            {/* lugude uploadi form */}\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <input ref={register} type=\"file\" name=\"file\" accept=\"audio/mpeg\" />\n                    <button>Submit</button>\n                </form>\n            </div>\n            {/* uploaditud lugude sektsioon */}\n            <div>\n                {uploadedFile ? (\n                <div>\n                    <div>\n                        <h1>{uploadedFile.name}</h1>\n                        <audio src={'/' + uploadedFile.name} autoPlay controls />                          \n                    </div>\n                </div>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}