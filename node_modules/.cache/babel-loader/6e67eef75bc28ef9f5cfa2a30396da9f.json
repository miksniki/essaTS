{"ast":null,"code":"var _jsxFileName = \"/home/hypescript/Projects/essaTS/src/components/Menu/Menu.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Lood from '../Lood/Lood';\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\nimport './Menu.scss';\n\nconst axios = require('axios');\n\nconst playlist = require('../../songPlaylist.json');\n\nconst Menu = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [uploadedFiles, setUploadedFile] = useState();\n  const musicRef = useRef(null);\n  useEffect(() => {\n    if (musicRef.current && musicRef.current.src !== playlist[activeIndex].heliFail) musicRef.current.src = playlist[activeIndex].heliFail;\n  }, [activeIndex]);\n\n  const handleClick = e => {\n    const newActiveIndex = e.target.getAttribute('data-index');\n    setActiveIndex(newActiveIndex);\n  };\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    formData.append('file', data.file[0]);\n    const res = await fetch('http://localhost:5000/upload', {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json());\n    alert(JSON.stringify(res));\n  };\n\n  const getFiles = async () => {\n    await fetch('http://localhost:5000/songs').then(res => res.json()).then(files => setUploadedFile(files.files));\n  };\n\n  const splitAudio = async fileName => {\n    fetch(`http://localhost:5000/${fileName}/split`).then(res => res.json()).then(function (data) {\n      alert(JSON.stringify(data));\n      console.warn(data);\n    });\n  };\n\n  const [valitudLood, setValitudLood] = useState([]);\n  const [editedSongs, setEditedSongs] = useState();\n\n  const getEditedFiles = async () => {\n    await fetch('http://localhost:5000/editedSongs').then(res => res.json()).then(files => setEditedSongs(files.files));\n  };\n\n  const download = fileName => {\n    const blob = new Blob(['audio'], {\n      type: 'audio/mpeg'\n    });\n    downloadFile(blob, `${fileName}`);\n  };\n\n  const downloadFile = (blob, fileName) => {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fileName;\n    a.click();\n  };\n\n  const checkboxChange = e => {\n    let checkedSongs = [...valitudLood, e.target.value];\n\n    if (valitudLood.includes(e.target.value)) {\n      checkedSongs = checkedSongs.filter(file => file !== e.target.value);\n    }\n\n    setValitudLood(checkedSongs);\n  };\n\n  const concatAudio = valitudLood => {\n    if (valitudLood.length === 2) {\n      axios({\n        method: \"POST\",\n        url: 'http://localhost:5000/concat',\n        data: valitudLood\n      });\n    } else {\n      alert(\"You need to select 2 songs!\");\n    }\n  };\n\n  const deleteAudio = async fileName => {\n    axios({\n      method: \"GET\",\n      url: 'http://localhost:5000/delete:',\n      data: fileName\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, playlist.length && /*#__PURE__*/React.createElement(ValitudLugu, {\n    lugu: playlist[activeIndex],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: '350px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, playlist.length && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, `Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`)), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: musicRef,\n    autoPlay: true,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Pick a song!\"), /*#__PURE__*/React.createElement(Lood, {\n    playlist: playlist,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register,\n    type: \"file\",\n    name: \"file\",\n    accept: \"audio/mpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Show uploaded songs\"), uploadedFiles ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, uploadedFiles.map(fileName => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"uploadedSongs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, fileName, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: fileName,\n    value: fileName,\n    onChange: checkboxChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"audio\", {\n    src: '/' + fileName,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => splitAudio(fileName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, \"Split audio\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => concatAudio(valitudLood),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Concat selected songs\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getEditedFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Show edited songs\"), editedSongs ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, editedSongs.map(fileName => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editedSongs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, fileName), /*#__PURE__*/React.createElement(\"audio\", {\n    src: '/' + fileName,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => download(fileName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteAudio(fileName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, \"Delete\")))) : null) : null));\n};\n\nexport default Menu;","map":{"version":3,"sources":["/home/hypescript/Projects/essaTS/src/components/Menu/Menu.tsx"],"names":["React","useState","useEffect","useRef","useForm","Lood","ValitudLugu","axios","require","playlist","Menu","activeIndex","setActiveIndex","register","handleSubmit","uploadedFiles","setUploadedFile","musicRef","current","src","heliFail","handleClick","e","newActiveIndex","target","getAttribute","onSubmit","data","formData","FormData","append","file","res","fetch","method","body","then","json","alert","JSON","stringify","getFiles","files","splitAudio","fileName","console","warn","valitudLood","setValitudLood","editedSongs","setEditedSongs","getEditedFiles","download","blob","Blob","type","downloadFile","url","window","URL","createObjectURL","a","document","createElement","href","click","checkboxChange","checkedSongs","value","includes","filter","concatAudio","length","deleteAudio","paddingTop","laulja","looNimi","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Lood from '../Lood/Lood';\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\n\nimport './Menu.scss';\n\nconst axios = require('axios');\nconst playlist = require('../../songPlaylist.json');\n\n\nconst Menu: FC = () => {\n    \n    const [activeIndex, setActiveIndex] = useState<number>(0);\n    const { register, handleSubmit } = useForm<any>();\n    const [uploadedFiles, setUploadedFile] = useState<any>();\n\n    const musicRef = useRef<HTMLAudioElement>(null);\n\n    useEffect(() => {\n        if(musicRef.current && musicRef.current.src !== playlist[activeIndex].heliFail)\n            musicRef.current.src = playlist[activeIndex].heliFail\n    }, [activeIndex]);\n\n    const handleClick = (e:any) => {\n        const newActiveIndex = e.target.getAttribute('data-index')\n        setActiveIndex( newActiveIndex )\n    };\n\n    const onSubmit = async (data:any) => {\n        const formData = new FormData();\n        formData.append('file', data.file[0]);\n\n        const res = await fetch('http://localhost:5000/upload', {\n            method: \"POST\",\n            body: formData\n        }).then(res => res.json())\n        alert(JSON.stringify(res))\n    };\n\n    const getFiles = async () => {\n        await fetch('http://localhost:5000/songs')\n            .then(res => res.json())\n            .then(files => setUploadedFile(files.files))\n    };\n\n    const splitAudio = async (fileName: string) => {\n        fetch(`http://localhost:5000/${fileName}/split`) \n            .then(res => res.json())\n            .then(function(data){alert(JSON.stringify(data))\n            console.warn(data)\n        })\n    }\n\n    const [valitudLood, setValitudLood] = useState<any>([]);\n    const [editedSongs, setEditedSongs] = useState<any>();\n\n    const getEditedFiles = async () => {\n        await fetch('http://localhost:5000/editedSongs')\n            .then(res => res.json())\n            .then(files => setEditedSongs(files.files))\n    };\n\n    const download = (fileName:any) => {\n        const blob = new Blob(['audio'], {type: 'audio/mpeg'})\n        downloadFile(blob, `${fileName}`);\n    }\n\n    const downloadFile = (blob:any, fileName:any) => {\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href= url;\n        a.download = fileName;\n        a.click();\n    }\n\n    const checkboxChange = (e:any) => {\n        let checkedSongs = [...valitudLood, e.target.value];\n        if(valitudLood.includes(e.target.value )) {\n            checkedSongs = checkedSongs.filter(file => file !== e.target.value);\n        }\n        setValitudLood(checkedSongs)\n    }\n\n    const concatAudio = (valitudLood:string[]) => {\n        if (valitudLood.length === 2){\n            axios({\n            method: \"POST\",\n            url: 'http://localhost:5000/concat',\n            data: valitudLood\n            })\n        } else {\n            alert(\"You need to select 2 songs!\")\n        }\n    }  \n\n    const deleteAudio = async (fileName:string) => {\n        axios({\n            method: \"GET\",\n            url: 'http://localhost:5000/delete:',\n            data: fileName\n        })\n    }\n\n    return(\n        <div className=\"menu\">\n            {/* valitud loo preview */}\n            <div className=\"container1\">\n                {playlist.length &&  <ValitudLugu lugu={playlist[activeIndex]}/>}\n                <p style={{paddingTop: '350px'}}>\n                    {playlist.length && \n                    <p>{(`Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`)}</p>}</p>\n                <audio ref={musicRef} autoPlay controls />\n            </div>\n            {/* lugude list */}\n            <div className=\"container2\">\n                <h1>Pick a song!</h1>\n                <Lood playlist={playlist} handleClick={handleClick}/>\n            </div>\n            {/* lugude uploadi form */}\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <input ref={register} type=\"file\" name=\"file\" accept=\"audio/mpeg\" />\n                    <button>Submit</button>\n                </form>\n            </div>\n\n            {/* uploaditud lugude sektsioon */}\n            <div>\n                <button onClick={getFiles}>Show uploaded songs</button>\n                {uploadedFiles ? (\n                <div>\n                    {uploadedFiles.map((fileName: string) =>\n                        <div className=\"uploadedSongs\">\n                            <h1>\n                                {fileName}\n                                <input type=\"checkbox\" id={fileName} value={fileName} onChange={checkboxChange}></input>\n                            </h1>\n                            <audio src={'/' + fileName} controls />\n                            <button onClick={() => splitAudio(fileName)}>Split audio</button>                           \n                        </div>\n                    )}\n                    <button onClick={() => concatAudio(valitudLood)}>Concat selected songs</button>\n                    <button onClick={getEditedFiles}>Show edited songs</button>\n                    {editedSongs ? (\n                    <div>\n                        {editedSongs.map((fileName: string) => \n                        <div className=\"editedSongs\">\n                            <h1>\n                            {fileName}\n                            </h1>\n                            <audio src={'/' + fileName} controls />\n                            <button onClick={() => download(fileName)}>Download</button>\n                            <button onClick={() => deleteAudio(fileName)}>Delete</button>\n                        </div>\n                        )}\n                    </div>\n                    ): null}\n                    </div>               \n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}