{"ast":null,"code":"var _jsxFileName = \"/home/hypescript/Projects/essaTS/src/components/Menu/Menu.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Lood from '../Lood/Lood';\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\nimport './Menu.scss';\n\nconst playlist = require('../../songPlaylist.json');\n\nconst Menu = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [uploadedFiles, setUploadedFile] = useState();\n  const [editSong, setEditSong] = useState();\n  const musicRef = useRef(null);\n  useEffect(() => {\n    if (musicRef.current && musicRef.current.src != playlist[activeIndex].heliFail) musicRef.current.src = playlist[activeIndex].heliFail;\n  }, [activeIndex]);\n\n  const handleClick = e => {\n    const newActiveIndex = e.target.getAttribute('data-index');\n    setActiveIndex(newActiveIndex);\n  };\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    formData.append('file', data.file[0]);\n    const res = await fetch('http://localhost:5000/upload', {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json());\n    alert(JSON.stringify(res));\n  };\n\n  const getFiles = async () => {\n    await fetch('http://localhost:5000/songs').then(res => res.json()).then(files => setUploadedFile(files.files));\n  };\n\n  const splitAudio = async fileName => {\n    fetch(`http://localhost:5000/split/'${fileName}/split`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(function (data) {\n      alert(JSON.stringify(data));\n      console.warn(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, playlist.length && /*#__PURE__*/React.createElement(ValitudLugu, {\n    lugu: playlist[activeIndex],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: '350px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, playlist.length && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, `Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`)), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: musicRef,\n    autoPlay: true,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Pick a song!\"), /*#__PURE__*/React.createElement(Lood, {\n    playlist: playlist,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register,\n    type: \"file\",\n    name: \"file\",\n    accept: \"audio/mpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Submit\"))), console.log(uploadedFiles), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Show uploaded songs\"), uploadedFiles ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, uploadedFiles.map(fileName => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, fileName), /*#__PURE__*/React.createElement(\"audio\", {\n    src: '/' + fileName,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => splitAudio(fileName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"Split audio\")))) : null));\n};\n\nexport default Menu;","map":{"version":3,"sources":["/home/hypescript/Projects/essaTS/src/components/Menu/Menu.tsx"],"names":["React","useState","useEffect","useRef","useForm","Lood","ValitudLugu","playlist","require","Menu","activeIndex","setActiveIndex","register","handleSubmit","uploadedFiles","setUploadedFile","editSong","setEditSong","musicRef","current","src","heliFail","handleClick","e","newActiveIndex","target","getAttribute","onSubmit","data","formData","FormData","append","file","res","fetch","method","body","then","json","alert","JSON","stringify","getFiles","files","splitAudio","fileName","headers","console","warn","length","paddingTop","laulja","looNimi","log","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Lood from '../Lood/Lood';\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\n\nimport './Menu.scss';\n\nconst playlist = require('../../songPlaylist.json');\n\n\nconst Menu: FC = () => {\n    \n    const [activeIndex, setActiveIndex] = useState<number>(0);\n    const { register, handleSubmit } = useForm<any>();\n    const [uploadedFiles, setUploadedFile] = useState<any>();\n    const [editSong, setEditSong] = useState<any>();\n\n    const musicRef = useRef<HTMLAudioElement>(null);\n\n    useEffect(() => {\n        if(musicRef.current && musicRef.current.src != playlist[activeIndex].heliFail)\n            musicRef.current.src = playlist[activeIndex].heliFail\n    }, [activeIndex]);\n\n    const handleClick = (e:any) => {\n        const newActiveIndex = e.target.getAttribute('data-index')\n        setActiveIndex( newActiveIndex )\n    };\n\n    const onSubmit = async (data:any) => {\n        const formData = new FormData();\n        formData.append('file', data.file[0]);\n\n        const res = await fetch('http://localhost:5000/upload', {\n            method: \"POST\",\n            body: formData\n        }).then(res => res.json())\n        alert(JSON.stringify(res))\n    };\n\n    const getFiles = async () => {\n        await fetch('http://localhost:5000/songs')\n            .then(res => res.json())\n            .then(files => setUploadedFile(files.files))\n    };\n\n    const splitAudio = async (fileName: string) => {\n            fetch(`http://localhost:5000/split/'${fileName}/split`, {    \n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: { 'Content-type': 'application/json'}\n        })\n        .then(res => res.json())\n        .then(function(data){alert(JSON.stringify(data))\n        console.warn(data)\n        })\n    }\n\n\n    return(\n        <div className=\"menu\">\n            {/* valitud loo preview */}\n            <div className=\"container1\">\n                {playlist.length &&  <ValitudLugu lugu={playlist[activeIndex]}/>}\n                <p style={{paddingTop: '350px'}}>\n                    {playlist.length && \n                    <p>{(`Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`)}</p>}</p>\n                <audio ref={musicRef} autoPlay controls />\n            </div>\n            {/* lugude list */}\n            <div className=\"container2\">\n                <h1>Pick a song!</h1>\n                <Lood playlist={playlist} handleClick={handleClick}/>\n            </div>\n            {/* lugude uploadi form */}\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <input ref={register} type=\"file\" name=\"file\" accept=\"audio/mpeg\" />\n                    <button>Submit</button>\n                </form>\n            </div>\n\n            {/* uploaditud lugude sektsioon */}\n \n            {console.log(uploadedFiles)}\n            <div>\n                <button onClick={getFiles}>Show uploaded songs</button>\n                {uploadedFiles ? (\n                <div>\n                    {uploadedFiles.map((fileName: string) =>\n                        <div>\n                            <h1>{fileName}</h1>\n                            <audio src={'/' + fileName} controls />\n                            <button onClick={() => splitAudio(fileName)}>Split audio</button> \n                           \n                           \n                        </div>\n                    )}\n                </div>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}