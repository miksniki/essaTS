{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\muss\\\\muss\\\\src\\\\components\\\\Menu\\\\Menu.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Lood from '../Lood/Lood';\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\nimport UploadiLugu from '../UploadiLugu/UploadiLugu';\nimport './Menu.scss';\n\nconst playlist = require('../../songPlaylist.json');\n\nconst Menu = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [uploadedFile, setUploadedFile] = useState({});\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const handleClick = e => {\n    const newActiveIndex = e.target.getAttribute('data-index');\n    setActiveIndex(newActiveIndex);\n  };\n\n  const renderValitudLugu = () => {\n    if (playlist.length) {\n      return /*#__PURE__*/React.createElement(ValitudLugu, {\n        lugu: playlist[activeIndex],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return null;\n  };\n\n  const renderValitudTekst = () => {\n    if (playlist.length) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, `Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`);\n    }\n\n    return null;\n  };\n\n  const musicRef = useRef(null);\n  useEffect(() => {\n    if (musicRef.current) musicRef.current.src = playlist[activeIndex].heliFail;\n  }, [activeIndex]);\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    formData.append('file', data.file[0]);\n    const res = await fetch('http://localhost:5000/upload', {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json());\n    alert(JSON.stringify(res));\n    const {\n      fileName,\n      filePath\n    } = res.data;\n    setUploadedFile({\n      fileName,\n      filePath\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, renderValitudLugu(), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: '350px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, renderValitudTekst()), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: musicRef,\n    autoPlay: true,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Pick a song!\"), /*#__PURE__*/React.createElement(Lood, {\n    playlist: playlist,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register,\n    type: \"file\",\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Submit\")), console.log(uploadedFile)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, uploadedFile.fileName, /*#__PURE__*/React.createElement(\"audio\", {\n    src: uploadedFile.filePath,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }))) : null, /*#__PURE__*/React.createElement(UploadiLugu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Menu;","map":{"version":3,"sources":["C:/Users/Admin/muss/muss/src/components/Menu/Menu.tsx"],"names":["React","useState","useEffect","useRef","useForm","Lood","ValitudLugu","UploadiLugu","playlist","require","Menu","activeIndex","setActiveIndex","uploadedFile","setUploadedFile","register","handleSubmit","handleClick","e","newActiveIndex","target","getAttribute","renderValitudLugu","length","renderValitudTekst","laulja","looNimi","musicRef","current","src","heliFail","onSubmit","data","formData","FormData","append","file","res","fetch","method","body","then","json","alert","JSON","stringify","fileName","filePath","paddingTop","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,aAAP;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,yBAAD,CAAxB;;AAGA,MAAMC,IAAQ,GAAG,MAAM;AAEnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAS,CAAT,CAA9C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAM,EAAN,CAAhD;AACA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BZ,OAAO,EAA1C;;AAEA,QAAMa,WAAW,GAAIC,CAAD,IAAW;AAC3B,UAAMC,cAAc,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAvB;AACAT,IAAAA,cAAc,CAAEO,cAAF,CAAd;AACH,GAHD;;AAKA,QAAMG,iBAAiB,GAAG,MAAM;AAC5B,QAAGd,QAAQ,CAACe,MAAZ,EAAoB;AAChB,0BACI,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEf,QAAQ,CAACG,WAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;AACD,WAAO,IAAP;AACH,GAPD;;AASA,QAAMa,kBAAkB,GAAG,MAAM;AAC7B,QAAGhB,QAAQ,CAACe,MAAZ,EAAoB;AAChB,0BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,gBAAef,QAAQ,CAACG,WAAD,CAAR,CAAsBc,MAAO,MAAKjB,QAAQ,CAACG,WAAD,CAAR,CAAsBe,OAAQ,EAArF,CADR;AAGH;;AACD,WAAO,IAAP;AACH,GAPD;;AASA,QAAMC,QAAQ,GAAGxB,MAAM,CAAmB,IAAnB,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGyB,QAAQ,CAACC,OAAZ,EACID,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,GAAuBrB,QAAQ,CAACG,WAAD,CAAR,CAAsBmB,QAA7C;AACP,GAHQ,EAGN,CAACnB,WAAD,CAHM,CAAT;;AAKA,QAAMoB,QAAQ,GAAG,MAAOC,IAAP,IAAoB;AACjC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAI,CAACI,IAAL,CAAU,CAAV,CAAxB;AAEA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACpDC,MAAAA,MAAM,EAAE,MAD4C;AAEpDC,MAAAA,IAAI,EAAEP;AAF8C,KAAjC,CAAL,CAGfQ,IAHe,CAGVJ,GAAG,IAAIA,GAAG,CAACK,IAAJ,EAHG,CAAlB;AAIAC,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeR,GAAf,CAAD,CAAL;AAEA,UAAM;AAAES,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBV,GAAG,CAACL,IAAnC;AACAlB,IAAAA,eAAe,CAAC;AAAEgC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAf;AACH,GAZD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKzB,iBAAiB,EADtB,eAEI;AAAG,IAAA,KAAK,EAAE;AAAC0B,MAAAA,UAAU,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCxB,kBAAkB,EAApD,CAFJ,eAGI;AAAO,IAAA,GAAG,EAAEG,QAAZ;AAAsB,IAAA,QAAQ,MAA9B;AAA+B,IAAA,QAAQ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,eAQI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEnB,QAAhB;AAA0B,IAAA,WAAW,EAAES,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACe,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAEhB,QAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,EAKKkC,OAAO,CAACC,GAAR,CAAYrC,YAAZ,CALL,CAbJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,gBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,CAACiC,QADlB,eAEI;AAAO,IAAA,GAAG,EAAEjC,YAAY,CAACkC,QAAzB;AAAoC,IAAA,QAAQ,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADa,GAQT,IATR,eAUI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CArBJ,CADJ;AAoCH,CAvFD;;AAyFA,eAAerC,IAAf","sourcesContent":["import React, { useState, useEffect, useRef, FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Lood from '../Lood/Lood';\r\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\r\nimport UploadiLugu from '../UploadiLugu/UploadiLugu';\r\nimport './Menu.scss';\r\n\r\nconst playlist = require('../../songPlaylist.json');\r\n\r\n\r\nconst Menu: FC = () => {\r\n    \r\n    const [activeIndex, setActiveIndex] = useState<number>(0);\r\n    const [uploadedFile, setUploadedFile] = useState<any>({});\r\n    const { register, handleSubmit } = useForm<any>();\r\n\r\n    const handleClick = (e:any) => {\r\n        const newActiveIndex = e.target.getAttribute('data-index')\r\n        setActiveIndex( newActiveIndex )\r\n    };\r\n\r\n    const renderValitudLugu = () => {\r\n        if(playlist.length) {\r\n            return (\r\n                <ValitudLugu lugu={playlist[activeIndex]}/>\r\n            )\r\n        }\r\n        return null\r\n    };\r\n\r\n    const renderValitudTekst = () => {\r\n        if(playlist.length) {\r\n            return (\r\n                    <p>{(`Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`)}</p>\r\n            )\r\n        }\r\n        return null\r\n    };\r\n    \r\n    const musicRef = useRef<HTMLAudioElement>(null);\r\n\r\n    useEffect(() => {\r\n        if(musicRef.current)\r\n            musicRef.current.src = playlist[activeIndex].heliFail\r\n    }, [activeIndex]);\r\n\r\n    const onSubmit = async (data:any) => {\r\n        const formData = new FormData();\r\n        formData.append('file', data.file[0]);\r\n\r\n        const res = await fetch('http://localhost:5000/upload', {\r\n            method: \"POST\",\r\n            body: formData\r\n        }).then(res => res.json())\r\n        alert(JSON.stringify(res));\r\n        \r\n        const { fileName, filePath } = res.data;\r\n        setUploadedFile({ fileName, filePath });\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"menu\">\r\n            {/* valitud loo preview */}\r\n            <div className=\"container1\">\r\n                {renderValitudLugu()}\r\n                <p style={{paddingTop: '350px'}}>{renderValitudTekst()}</p>\r\n                <audio ref={musicRef} autoPlay controls />\r\n            </div>\r\n            {/* lugude list */}\r\n            <div className=\"container2\">\r\n                <h1>Pick a song!</h1>\r\n                <Lood playlist={playlist} handleClick={handleClick}/>\r\n            </div>\r\n            {/* lugude uploadi form */}\r\n            <div>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input ref={register} type=\"file\" name=\"file\" />\r\n                    <button>Submit</button>\r\n                </form>\r\n                {console.log(uploadedFile)}\r\n            </div>\r\n            {/* uploaditud lugude sektsioon */}\r\n            <div>\r\n                {uploadedFile ? (\r\n                <div>\r\n                    <div>\r\n                        {uploadedFile.fileName}\r\n                        <audio src={uploadedFile.filePath}  controls />\r\n                        \r\n                    </div>\r\n                </div>\r\n                ) : null}\r\n                <UploadiLugu />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}