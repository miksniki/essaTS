{"ast":null,"code":"var _jsxFileName = \"/home/hypescript/Projects/essaTS/src/components/Menu/Menu.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Lood from '../Lood/Lood';\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\nimport './Menu.scss';\n\nconst playlist = require('../../songPlaylist.json');\n\nconst Menu = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [uploadedFile, setUploadedFile] = useState();\n  const [editSong, setEditSong] = useState();\n  const musicRef = useRef(null);\n  useEffect(() => {\n    if (musicRef.current) musicRef.current.src = playlist[activeIndex].heliFail;\n  }, [activeIndex]);\n\n  const handleClick = e => {\n    const newActiveIndex = e.target.getAttribute('data-index');\n    setActiveIndex(newActiveIndex);\n  };\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    formData.append('file', data.file[0]);\n    const res = await fetch('http://localhost:5000/upload', {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json());\n    alert(JSON.stringify(res));\n  };\n\n  const renderValitudLugu = () => {\n    if (playlist.length) {\n      return /*#__PURE__*/React.createElement(ValitudLugu, {\n        lugu: playlist[activeIndex],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return null;\n  };\n\n  const renderValitudTekst = () => {\n    if (playlist.length) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, `Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`);\n    }\n\n    return null;\n  };\n\n  const getFiles = async () => {\n    await fetch('http://localhost:5000/songs').then(res => res.json()).then(files => setUploadedFile(files));\n  };\n\n  const splitAudio = async filename => {\n    let file = {\n      filename: editSong\n    };\n    let data = new FormData();\n    data.append('json', JSON.stringify(file));\n    fetch(`http://localhost:5000/split/'${filename}/split`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(function (data) {\n      alert(JSON.stringify(data));\n      console.warn(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, renderValitudLugu(), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: '350px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, renderValitudTekst()), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: musicRef,\n    autoPlay: true,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Pick a song!\"), /*#__PURE__*/React.createElement(Lood, {\n    playlist: playlist,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register,\n    type: \"file\",\n    name: \"file\",\n    accept: \"audio/mpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Submit\"))), console.log(uploadedFile), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Show uploaded songs\"), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, uploadedFile.files.map(array => array.map(file => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, file), /*#__PURE__*/React.createElement(\"audio\", {\n    src: '/' + file,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: splitAudio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"Split audio\"))))) : null));\n};\n\nexport default Menu;","map":{"version":3,"sources":["/home/hypescript/Projects/essaTS/src/components/Menu/Menu.tsx"],"names":["React","useState","useEffect","useRef","useForm","Lood","ValitudLugu","playlist","require","Menu","activeIndex","setActiveIndex","register","handleSubmit","uploadedFile","setUploadedFile","editSong","setEditSong","musicRef","current","src","heliFail","handleClick","e","newActiveIndex","target","getAttribute","onSubmit","data","formData","FormData","append","file","res","fetch","method","body","then","json","alert","JSON","stringify","renderValitudLugu","length","renderValitudTekst","laulja","looNimi","getFiles","files","splitAudio","filename","headers","console","warn","paddingTop","log","map","array"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Lood from '../Lood/Lood';\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\n\nimport './Menu.scss';\n\nconst playlist = require('../../songPlaylist.json');\n\n\nconst Menu: FC = () => {\n    \n    const [activeIndex, setActiveIndex] = useState<number>(0);\n    const { register, handleSubmit } = useForm<any>();\n    const [uploadedFile, setUploadedFile] = useState<any>();\n    const [editSong, setEditSong] = useState<any>();\n\n    const musicRef = useRef<HTMLAudioElement>(null);\n\n    useEffect(() => {\n        if(musicRef.current)\n            musicRef.current.src = playlist[activeIndex].heliFail\n    }, [activeIndex]);\n\n    const handleClick = (e:any) => {\n        const newActiveIndex = e.target.getAttribute('data-index')\n        setActiveIndex( newActiveIndex )\n    };\n\n    const onSubmit = async (data:any) => {\n        const formData = new FormData();\n        formData.append('file', data.file[0]);\n\n        const res = await fetch('http://localhost:5000/upload', {\n            method: \"POST\",\n            body: formData\n        }).then(res => res.json())\n        alert(JSON.stringify(res))\n    };\n\n    const renderValitudLugu = () => {\n        if(playlist.length) {\n            return (\n                <ValitudLugu lugu={playlist[activeIndex]}/>\n            )\n        }\n        return null\n    };\n\n    const renderValitudTekst = () => {\n        if(playlist.length) {\n            return (\n                    <p>{(`Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`)}</p>\n            )\n        }\n        return null\n    };\n       \n    const getFiles = async () => {\n        await fetch('http://localhost:5000/songs')\n            .then(res => res.json())\n            .then(files => setUploadedFile(files))\n    };\n\n    const splitAudio = async (filename:any) => {\n        let file = { filename : editSong };\n    \n        let data = new FormData();\n        data.append('json', JSON.stringify(file))\n\n        fetch(`http://localhost:5000/split/'${filename}/split`, {    \n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: { 'Content-type': 'application/json'}\n        })\n        .then(res => res.json())\n        .then(function(data){alert(JSON.stringify(data))\n        console.warn(data)\n        })\n    }\n\n\n    return(\n        <div className=\"menu\">\n            {/* valitud loo preview */}\n            <div className=\"container1\">\n                {renderValitudLugu()}\n                <p style={{paddingTop: '350px'}}>{renderValitudTekst()}</p>\n                <audio ref={musicRef} autoPlay controls />\n            </div>\n            {/* lugude list */}\n            <div className=\"container2\">\n                <h1>Pick a song!</h1>\n                <Lood playlist={playlist} handleClick={handleClick}/>\n            </div>\n            {/* lugude uploadi form */}\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <input ref={register} type=\"file\" name=\"file\" accept=\"audio/mpeg\" />\n                    <button>Submit</button>\n                </form>\n            </div>\n\n            {/* uploaditud lugude sektsioon */}\n \n            {console.log(uploadedFile)}\n            <div>\n                <button onClick={getFiles}>Show uploaded songs</button>\n                {uploadedFile ? (\n                <div>\n                    {uploadedFile.files.map((array:any) => array.map((file:any) => \n                        <div>\n                            <h1>{file}</h1>\n                            <audio src={'/' + file} controls />\n                            <button onClick={splitAudio}>Split audio</button> \n                        </div>\n                    ))}\n                </div>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}