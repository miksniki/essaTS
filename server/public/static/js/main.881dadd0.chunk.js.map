{"version":3,"sources":["components/Lugu/Lugu.tsx","components/Lood/Lood.tsx","components/ValitudLugu/ValitudLugu.tsx","components/Menu/Menu.tsx","App.tsx","index.tsx"],"names":["Lugu","looPilt","handleClick","index","src","className","alt","onClick","data-index","Lood","playlist","map","lugu","i","key","ValitudLugu","require","Menu","useState","activeIndex","setActiveIndex","useForm","register","handleSubmit","uploadedFile","setUploadedFile","editSong","musicRef","useRef","useEffect","current","heliFail","onSubmit","data","a","formData","FormData","append","file","fetch","method","body","then","res","json","alert","JSON","stringify","getFiles","files","splitAudio","filename","length","style","paddingTop","laulja","looNimi","ref","autoPlay","controls","e","newActiveIndex","target","getAttribute","type","name","accept","console","log","array","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.881dadd0.chunk.js","sourcesContent":["import React from 'react';\nimport './Lugu.scss';\n\ntype Props = {\n    looPilt: string;\n    handleClick: any;\n    index: number\n}\n\nconst Lugu: React.FC<Props> = ({ looPilt, handleClick, index }) => {\n    return (\n        <div>\n           <img \n                src={looPilt} \n                className=\"pildike\" \n                alt=\"pildike\" \n                onClick={handleClick} \n                data-index={index}\n           />\n        </div>\n    )\n}\n\nexport default Lugu;","import React from 'react';\nimport Lugu from '../Lugu/Lugu';\n\ntype Props = {\n    playlist: any[];\n    handleClick: any;\n}\n\nconst Lood: React.FC<Props> = ({ playlist, handleClick }) => {\n    return (\n        <div>\n            <div>\n                {\n                playlist.map(((lugu:any, i:number) => {\n                    return (\n                        <Lugu \n                            key={lugu.looPilt} \n                            looPilt={lugu.looPilt}\n                            handleClick={handleClick}\n                            index={i}\n                        />\n                    )\n                }))}\n            </div>\n        </div>\n    )\n}\n\nexport default Lood;","import React from 'react';\nimport './ValitudLugu.scss';\n\nconst ValitudLugu: React.FC<any> = ({ lugu }) => {\n    return (\n        <div>\n            <img src={lugu.looPilt} alt='pildike'/>\n            \n        </div>\n    )\n}\n\nexport default ValitudLugu;","import React, { useState, useEffect, useRef, FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Lood from '../Lood/Lood';\nimport ValitudLugu from '../ValitudLugu/ValitudLugu';\n\nimport './Menu.scss';\n\nconst playlist = require('../../songPlaylist.json');\n\n\nconst Menu: FC = () => {\n    \n    const [activeIndex, setActiveIndex] = useState<number>(0);\n    const { register, handleSubmit } = useForm<any>();\n    const [uploadedFile, setUploadedFile] = useState<any>();\n    const [editSong, setEditSong] = useState<any>();\n\n    const musicRef = useRef<HTMLAudioElement>(null);\n\n    useEffect(() => {\n        if(musicRef.current)\n            musicRef.current.src = playlist[activeIndex].heliFail\n    }, [activeIndex]);\n\n    const handleClick = (e:any) => {\n        const newActiveIndex = e.target.getAttribute('data-index')\n        setActiveIndex( newActiveIndex )\n    };\n\n    const onSubmit = async (data:any) => {\n        const formData = new FormData();\n        formData.append('file', data.file[0]);\n\n        const res = await fetch('http://localhost:5000/upload', {\n            method: \"POST\",\n            body: formData\n        }).then(res => res.json())\n        alert(JSON.stringify(res))\n    };\n\n    const renderValitudLugu = () => {\n        if(playlist.length) {\n            return (\n                <ValitudLugu lugu={playlist[activeIndex]}/>\n            )\n        }\n        return null\n    };\n\n    const renderValitudTekst = () => {\n        if(playlist.length) {\n            return (\n                    <p>{(`Now playing: ${playlist[activeIndex].laulja} - ${playlist[activeIndex].looNimi}`)}</p>\n            )\n        }\n        return null\n    };\n       \n    const getFiles = async () => {\n        await fetch('http://localhost:5000/songs')\n            .then(res => res.json())\n            .then(files => setUploadedFile(files))\n    };\n\n     const splitAudio = async (filename:any) => {\n         filename = editSong;\n         const data = new FormData();\n         data.append('filename', filename.file[0]);\n\n         const res = fetch('http://localhost:5000/split/'+filename+'/split', {\n             method: \"POST\",\n             body: data\n         }).then(res => res.json())\n         alert(JSON.stringify(res));\n    }; \n\n\n    return(\n        <div className=\"menu\">\n            {/* valitud loo preview */}\n            <div className=\"container1\">\n                {renderValitudLugu()}\n                <p style={{paddingTop: '350px'}}>{renderValitudTekst()}</p>\n                <audio ref={musicRef} autoPlay controls />\n            </div>\n            {/* lugude list */}\n            <div className=\"container2\">\n                <h1>Pick a song!</h1>\n                <Lood playlist={playlist} handleClick={handleClick}/>\n            </div>\n            {/* lugude uploadi form */}\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <input ref={register} type=\"file\" name=\"file\" accept=\"audio/mpeg\" />\n                    <button>Submit</button>\n                </form>\n            </div>\n\n            {/* uploaditud lugude sektsioon */}\n \n            {console.log(uploadedFile)}\n            <div>\n                <button onClick={getFiles}>Show uploaded songs</button>\n                {uploadedFile ? (\n                <div>\n                    {uploadedFile.files.map((array:any) => array.map((file:any) => \n                        <div>\n                            <h1>{file}</h1>\n                            <audio src={'/' + file} controls />\n                            <button onClick={splitAudio}>Split audio</button> \n                        </div>\n                    ))}\n                </div>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;\n","import React from 'react';\nimport './App.scss';\nimport Menu from './components/Menu/Menu';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}